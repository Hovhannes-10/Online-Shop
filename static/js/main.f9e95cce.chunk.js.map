{"version":3,"sources":["actions/errorActions.js","actions/type.js","actions/authActions.js","components/auth/registerModal.js","components/auth/loginModal.js","components/auth/logOut.js","components/AppNavbar.js","actions/itemsActions.js","components/Product.js","actions/cartActions.js","components/Title.js","components/ShoppingList.js","components/itemModal.js","components/Details.js","components/Cart/CartColumns.js","components/Cart/EmptyCart.js","components/Cart/CartItem.js","components/Cart/CartList.js","components/Cart/CartTotals.js","components/Cart/Cart.js","components/Default.js","reducers/itemReducer.js","reducers/cartReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","configToken","getState","token","auth","console","log","config","headers","RegisterModal","state","modal","name","email","password","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","prevProps","this","error","isAuthenticated","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","Button","style","marginTop","block","Component","connect","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","LoginModal","user","login","Logout","logout","AppNavbar","item","authLinks","NavItem","className","guestLink","Navbar","dark","expand","Container","NavbarBrand","tag","to","NavbarToggler","Collapse","navbar","Nav","getItems","setItemsLoading","get","Product","addToCart","product","_id","img","price","inCart","ProductWrapper","src","alt","width","height","title","disabled","bind","propTayps","PropTayps","object","isRequired","func","put","styled","div","Title","ShoppingList","items","map","key","cart","deleteItem","delete","ItemModal","info","file","fileUpload","files","a","formData","FormData","append","addItem","marginBottom","encType","Detalis","Context","find","match","params","CartColumns","EmptyCart","CartItem","cartItem","increment","decrement","removeInCart","count","total","CartList","CartTotals","clearCart","cartTotals","reduce","b","Cart","length","Default","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","path","component","exact","Card","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9e95cce.chunk.js","sourcesContent":["import {GET_ERRORS , CLEAR_ERRORS } from \"./type\" \r\n\r\nexport const returnErrors = (msg ,status , id =null) =>{\r\n    return{\r\n        type:GET_ERRORS,\r\n        payload: {msg ,status ,id}\r\n    };\r\n}\r\n\r\nexport const clearErrors = () =>{\r\n    return{\r\n        type:CLEAR_ERRORS\r\n    }\r\n}","export const GET_ITEMS ='GET_ITEMS'\r\nexport const ADD_ITEM ='ADD_ITEM'\r\nexport const DELETE_ITEM ='DELETE_ITEM'\r\nexport const LOADING_ITEMS = 'LOADING_ITEMS'\r\nexport const USER_LOADING = \"USER_LOADING\"\r\nexport const USER_LOADED = \"USER_LOADED\"\r\nexport const AUTH_ERROR = \"AUTH_ERROR\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\r\nexport const GET_ERRORS ='GET_ERRORS'\r\nexport const CLEAR_ERRORS ='CLEAR_ERRORS'\r\nexport const ADD_TO_CART ='ADD_TO_CART'\r\nexport const INCREMENT ='INCREMENT'\r\nexport const DECREMENT ='DECREMENT'\r\nexport const REMOVE_IN_CART='REMOVE_IN_CART'\r\nexport const DELETE_CART ='DELETE_CART'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { returnErrors } from \"./errorActions\"\r\nimport {\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from \"./type\"\r\n\r\nexport const loadUser = () => (dispatch , getState ) => {\r\n    dispatch ({ type: USER_LOADING });\r\n    \r\n   axios.get(\"/api/auth/user\" ,configToken(getState)) \r\n   .then(res => dispatch({\r\n       type:USER_LOADED,\r\n       payload:res.data\r\n   })).catch(err => {\r\n       dispatch(returnErrors(err.response.data ,err.response.status))\r\n        dispatch ({\r\n            type: AUTH_ERROR\r\n        })\r\n   })\r\n}\r\n\r\nexport const register =({name, email , password}) => dispatch => {\r\n    const config = {\r\n        headers :{\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    }\r\n    const body = JSON.stringify({name , password , email});\r\n    axios.post('/api/user' ,body, config )\r\n    .then(res => {\r\n        dispatch({\r\n            type:REGISTER_SUCCESS,\r\n            payload:res.data\r\n        })\r\n    }).catch(err => {\r\n        dispatch(returnErrors(err.response.data ,err.response.status, 'REGISTER_FAIL'))\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        })\r\n    })\r\n}\r\nexport const login =({email , password}) => dispatch => {\r\n    const config = {\r\n        headers :{\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    }\r\n    const body = JSON.stringify({ password , email});\r\n    axios.post('/api/auth' ,body, config )\r\n    .then(res => {\r\n        console.log(res.data);\r\n        dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload:res.data\r\n        })\r\n    }).catch(err => {\r\n        dispatch(returnErrors(err.response.data ,err.response.status, 'LOGIN_FAIL'))\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    })\r\n}\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    }\r\n}\r\nexport const configToken = getState =>{\r\n    const token = getState().auth.token;\r\n    console.log(token)\r\n    const config = {\r\n        headers : {\r\n           \"Content-type\": \"application/json\"\r\n       }\r\n   }\r\n   if(token) {\r\n       config.headers['x-auth-token'] = token;\r\n   }\r\n   return config\r\n}","import React,{Component} from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n\tInput,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { register } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\"\r\nimport PropTypes from \"prop-types\"\r\nclass RegisterModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        name: \"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        msg:null\r\n\t};\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        register : PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        const { error,isAuthenticated } =this.props;\r\n        if(error !== prevProps.error){\r\n            if (error.id === 'REGISTER_FAIL') {\r\n                this.setState({msg:error.msg.msg})\r\n            }else {\r\n                this.setState({msg: null})\r\n            }\r\n        };\r\n        if(this.state.modal){\r\n            if(isAuthenticated){\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n    toggle = () =>{\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        });\r\n    };\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const { name, email, password } = this.state;\r\n        const newUser = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n       this.props.register(newUser)\r\n       \r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <NavLink onClick = {this.toggle} href = \"#\">Register</NavLink>\r\n\r\n                <Modal isOpen= {this.state.modal} toggle= {this.toggle}>\r\n                    <ModalHeader toggle= {this.toggle}> Register </ModalHeader>\r\n                    <ModalBody>\r\n                        {this.state.msg? <Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                        <Form onSubmit ={ this.onSubmit }>\r\n                            <FormGroup>\r\n                                <Label for = 'name'>Name</Label>\r\n                                <Input \r\n                                onChange = {this.onChange}\r\n                                name =\"name\"\r\n                                type =\"text\"\r\n                                id=\"name\"\r\n                                placeholder =\"Name\"/>\r\n\t\t\t\t\t\t\t\t<Label for = 'email'>Email</Label>\r\n                                <Input \r\n                                onChange = {this.onChange}\r\n                                name =\"email\"\r\n                                type =\"email\"\r\n                                id=\"email\"\r\n                                placeholder =\"Email\"/>\r\n\t\t\t\t\t\t\t\t<Label for = 'password'>Password</Label>\r\n                                <Input \r\n                                onChange = {this.onChange}\r\n                                name =\"password\"\r\n                                type =\"password\"\r\n                                id=\"password\"\r\n                                placeholder =\"Password\"/>\r\n                                <Button color= 'dark' style ={{marginTop:'2rem' } }block>\r\n                                Register</Button>\r\n                            </FormGroup>\r\n\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated:state.auth.isAuthenticated,\r\n\terror: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps ,{ register,clearErrors })(RegisterModal)","import React,{Component} from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n\tInput,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { login } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\"\r\nimport PropTypes from \"prop-types\"\r\nclass LoginModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        email:\"\",\r\n        password:\"\",\r\n        msg:null\r\n\t};\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        login : PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        const { error,isAuthenticated } =this.props;\r\n        if(error !== prevProps.error){\r\n            if (error.id === 'LOGIN_FAIL') {\r\n                this.setState({msg:error.msg.msg})\r\n            }else {\r\n                this.setState({msg: null})\r\n            }\r\n        };\r\n        if(this.state.modal){\r\n            if(isAuthenticated){\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n    toggle = () =>{\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        });\r\n    };\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const {email ,password} = this.state;\r\n        const user = {\r\n            email,\r\n            password\r\n        };\r\n        this.props.login(user)\r\n       \r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <NavLink onClick = {this.toggle} href = \"#\">Login</NavLink>\r\n\r\n                <Modal isOpen= {this.state.modal} toggle= {this.toggle}>\r\n                    <ModalHeader toggle= {this.toggle}> Login </ModalHeader>\r\n                    <ModalBody>\r\n                        {this.state.msg? <Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                        <Form onSubmit ={ this.onSubmit }>\r\n                            <FormGroup>\r\n\t\t\t\t\t\t\t\t<Label for = 'email'>Email</Label>\r\n                                <Input \r\n                                onChange = {this.onChange}\r\n                                name =\"email\"\r\n                                type =\"email\"\r\n                                id=\"email\"\r\n                                placeholder =\"Email\"/>\r\n\t\t\t\t\t\t\t\t<Label for = 'password'>Password</Label>\r\n                                <Input \r\n                                onChange = {this.onChange}\r\n                                name =\"password\"\r\n                                type =\"password\"\r\n                                id=\"password\"\r\n                                placeholder =\"Password\"/>\r\n                                <Button color= 'dark' style ={{marginTop:'2rem' } }block>\r\n                                Login</Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated:state.auth.isAuthenticated,\r\n\terror: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps ,{ login,clearErrors })(LoginModal)","import React, { Component ,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { NavLink } from 'reactstrap';\r\nimport { logout } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport class Logout extends Component {\r\n    static propTypes ={\r\n        logout: PropTypes.func.isRequired\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Fragment>\r\n                    <NavLink onClick ={this.props.logout} href = \"#\">Logout</NavLink>\r\n                </Fragment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null ,{ logout })(Logout);","import React,{ Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n// import styled from 'styled-components'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    Container\r\n} from 'reactstrap'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport RegisterModal from './auth/registerModal';\r\nimport LoginModal from './auth/loginModal';\r\nimport Logout from './auth/logOut';\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isOpen : false\r\n    }\r\n    static propTypes = {\r\n        auth:PropTypes.object.isRequired\r\n    }\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n    render() {\r\n        const { isAuthenticated, user } = this.props.auth;\r\n        console.log(this.props.item)\r\n        const authLinks = (\r\n            <Fragment>\r\n                <NavItem>\r\n                    <span className = \"navbar-text\">\r\n                        <strong>{user ? user.name : ''}</strong>\r\n                    </span>\r\n                </NavItem>\r\n                <NavItem>\r\n                   <Logout/>\r\n                </NavItem>\r\n            </Fragment>\r\n        );\r\n        const guestLink =(\r\n            <Fragment>\r\n                <NavItem >\r\n                    <RegisterModal />\r\n                </NavItem>\r\n                <NavItem className=\"nav-item\">\r\n                    <LoginModal />\r\n                </NavItem>\r\n            </Fragment>\r\n        )\r\n        return(\r\n            <div>\r\n                <Navbar color =\"danger\" dark expand =\"sm\" className=\"mb-5\">\r\n                    <Container>\r\n\r\n                        <NavbarBrand tag=\"span\"><Link to = '/' className='nav-item'> Soping List</Link></NavbarBrand>\r\n                        <NavbarToggler onClick = {this.toggle}></NavbarToggler>\r\n                        <Collapse  isOpen ={this.state.isOpen} navbar>\r\n                            <Nav className = \"ml-auto align-items-center\" navbar>\r\n                                <NavItem >\r\n                                    <Link to = '/card'>\r\n                                        <button className = 'button'>\r\n                                            <span className = \"mr-2\">\r\n                                                <i className = 'fas fa-cart-plus'></i>\r\n                                            </span>\r\n                                            My Card\r\n                                        </button>\r\n                                    </Link>\r\n                                </NavItem>\r\n                                {isAuthenticated ? authLinks :guestLink}\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = state => ({\r\n    auth:state.auth\r\n    \r\n})\r\nexport default connect(MapStateToProps , null)(AppNavbar)","import axios from 'axios'\r\nimport {GET_ITEMS,ADD_ITEM,DELETE_ITEM,LOADING_ITEMS, ADD_TO_CART } from './type'\r\n\r\nexport  const getItems = () => dispatch =>{\r\n    dispatch(setItemsLoading());\r\n    axios.get('/api/items')\r\n    .then(res => dispatch({\r\n        type:GET_ITEMS,\r\n        payload:res.data\r\n    }))\r\n}\r\nexport  const addItem = item =>async dispatch => {\r\n    await axios.post('/api/items', item , { \r\n        headers: {\r\n            \"Content-Type\":\"multipart/form-data\" \r\n        } \r\n    }).then(res => {\r\n        dispatch({\r\n            type:ADD_ITEM,\r\n            payload: res.data\r\n        })\r\n    })\r\n}\r\n// export const addToCart =id => dispatch =>{\r\n//     dispatch({\r\n//         type:ADD_TO_CART,\r\n//         payload:id\r\n//     }) \r\n// }\r\nexport  const deleteItem = id => dispatch =>{\r\n    axios.delete(`/api/items/${id}`).then(res => {\r\n        dispatch({\r\n            type:DELETE_ITEM,\r\n            payload:id\r\n        })\r\n    })\r\n}\r\nexport const setItemsLoading = () =>{\r\n    return{\r\n        type:LOADING_ITEMS\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport  styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTayps from \"prop-types\"\r\nimport { addToCart } from '../actions/cartActions';\r\nimport { getItems } from '../actions/itemsActions'\r\n\r\nexport class Product extends Component {\r\n    componentDidMount (){\r\n        this.props.getItems()\r\n    }\r\n    onClick = id => { \r\n      this.props.addToCart(id);\r\n    }  \r\n    render() {\r\n        // console.log(this.props) \r\n        const product = this.props.product\r\n        const { _id, name, img, price, inCart} = product\r\n        return (\r\n            <ProductWrapper className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\"> \r\n                <div className=\"card\">\r\n                    <div className=\"img-container p-5\">\r\n                        <Link to = {`/detalis/${_id}`}>\r\n                            <img src = { img } alt=\"product\" className=\"card-img-top\" style = {{width:'100%' ,height: '10rem'}} title=\"click for more detalis\"/> \r\n                        </Link>\r\n                        <button \r\n                            className=\"cart-btn\"\r\n                            disabled={inCart? true: false }\r\n                            onClick = {this.onClick.bind(this ,_id)}\r\n                        >\r\n                            {inCart ? (\r\n                                    <p className=\"text-capitalize mb-0\" disabled>\r\n                                        {\" \"}\r\n                                        inCart\r\n                                    </p>\r\n                                ) :(\r\n                                   <span> add to cart<i className=\"fas fa-cart-plus\" /></span> \r\n                                )} \r\n                        </button>                                             \r\n                    </div>\r\n                    <div className=\"card-footer d-flex justify-content-between\">\r\n                        <p className=\"align-self-center mb-0\">{ name }</p>\r\n                        <h5 className=\"font-italic mb-0\">\r\n                            <span className=\"mr-1\">$</span>\r\n                            { price } \r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            </ProductWrapper>\r\n        )\r\n    }\r\n}\r\nProduct.propTayps = {\r\n    item: PropTayps.object.isRequired,\r\n    addToCart: PropTayps.func.isRequired,\r\n    getItems: PropTayps.func.isRequired\r\n}\r\nconst  mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\nexport default connect(mapStateToProps , { addToCart,getItems}) (Product)\r\n\r\n\r\nconst ProductWrapper = styled.div`\r\n    .card {\r\n        border-color: transparent;\r\n        transition:all 0.5s linear;\r\n    }\r\n    .card-footer {\r\n        background: transparent;\r\n        border-top: transparent;\r\n        transition:all 1s linear;\r\n    }\r\n    &:hover {\r\n        .card{\r\n            border: 0.04rem solid rgba(0, 0, 0, 0.4);\r\n            box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.4);\r\n        }\r\n    }\r\n    .card-footer {\r\n        background : rgba(247, 247, 247);\r\n    }\r\n    .img-container {\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n    .card-img-top {\r\n        transition:all 1s linear;\r\n    }\r\n    img-container:hover .card-img-top {\r\n        transform: scale(0.5);\r\n    }\r\n    .cart-btn {\r\n        position: absolute;\r\n        bottom: 0;\r\n        right: 0;\r\n        padding: 0.2rem 0.4rem;\r\n        background:#e80c21;\r\n        width:100%;\r\n        border: none;\r\n        color: #f8f9fa\r\n        font-size: 1.2rem;\r\n        // border-radius: 0.5rem 0 0 0;\r\n        transform: translate(0 , 100%);\r\n        transition: all 1s linear;\r\n    }\r\n    .img-container:hover .cart-btn {\r\n        transform: translate(0,0);\r\n    }\r\n`;","import axios from 'axios';\r\nimport { ADD_TO_CART, REMOVE_IN_CART, INCREMENT, DECREMENT, DELETE_CART } from './type'\r\n\r\nexport const addToCart =id => dispatch =>{\r\n    console.log(\"add\")\r\n    axios.put(`/api/items/${id}`,{\r\n        headers: {\r\n        \"Content-Type\":\"multipart/form-data\" \r\n        } \r\n    }).then(res =>{\r\n         dispatch({\r\n            type:ADD_TO_CART,\r\n            payload:res.data\r\n        })\r\n    })  \r\n}\r\nexport const increment = id =>dispatch => {\r\n    console.log(\"increment\")\r\n    dispatch({\r\n        type:INCREMENT,\r\n        payload:id\r\n    })\r\n}\r\nexport const decrement = id =>dispatch => {\r\n    console.log(\"decremnet\")\r\n    dispatch({\r\n        type:DECREMENT,\r\n        payload:id\r\n    })\r\n}\r\nexport const removeInCart = id => dispatch => {\r\n    console.log(\"delete\")\r\n    axios.put(`/api/items/${id}`,{\r\n        headers: {\r\n        \"Content-Type\":\"multipart/form-data\" \r\n        } \r\n    }).then(res => { \r\n        dispatch({\r\n            type:REMOVE_IN_CART,\r\n            payload:id\r\n        })\r\n    })\r\n}\r\nexport const clearCart = () => dispatch => {\r\n    axios.post('api/items/remove_cart' , {\r\n        headers :{\r\n            \"Content-Type\" : \"application/json\"\r\n        }\r\n    })\r\n    .then(res => {\r\n        console.log(res.data)\r\n        dispatch({\r\n            type:DELETE_CART,\r\n            payload:res.data\r\n        })\r\n    })\r\n} ","import React from 'react'\r\n\r\nexport default function Title({name, title}) {\r\n    return (\r\n        <div className =\"row\">\r\n            <div className=\"col-10 mx-auto my-2 text-center text-titel\">\r\n                <h1 className=\"text-capitalize font-weight-bold\">\r\n                     {name} <strong>{ title}</strong>\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React ,{ Component,Fragment } from 'react';\r\nimport Product from './Product'\r\nimport Title from './Title'\r\n// import {ListGroup,ListGroupItem ,Container , Button} from 'reactstrap' ;\r\nimport { connect } from 'react-redux';\r\nimport { getItems,deleteItem } from '../actions/itemsActions';\r\nimport PropTayps from \"prop-types\"\r\n\r\nclass ShoppingList extends Component {\r\n    // componentDidMount()  {\r\n    //     this.props.getItems();  \r\n    // }\r\n    render() {   \r\n        console.log(this.props.item);\r\n        const { items } = this.props.item;\r\n\r\n        return(\r\n            <Fragment>\r\n                <div className = \"py-5\">\r\n                    <div className=\"container\">\r\n                        <Title  name='our' title = 'products'/>\r\n                        <div className=\"row\">\r\n                            {items.map(item =>{\r\n                            return<Product key={ item._id } product ={ item }/>\r\n                         })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n            \r\n\r\n        )\r\n    }\r\n}\r\nShoppingList.propTayps = {\r\n    item: PropTayps.object.isRequired,\r\n    getItems: PropTayps.func.isRequired,\r\n}\r\nconst  mapStateToProps = (state) => ({\r\n    item: state.item,\r\n    cart: state.cart\r\n})\r\nexport default connect(mapStateToProps , { getItems, deleteItem }) (ShoppingList)","import React,{Component} from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from \"../actions/itemsActions\";\r\n\r\nclass ItemModal extends Component  {\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        info:'',\r\n        price:null,\r\n        file:'',\r\n    }\r\n    toggle = () =>{\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n    }\r\n    fileUpload = (e) => {\r\n        this.setState({\r\n            file:e.target.files[0],\r\n        })\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    onSubmit = async e => {\r\n        const formData =new FormData();\r\n        formData.append('file', this.state.file);\r\n        formData.append('name', this.state.name);\r\n        formData.append('info', this.state.info);\r\n        formData.append('price', this.state.price);\r\n        e.preventDefault();\r\n        this.props.addItem(formData);\r\n        this.toggle();\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button \r\n                    onClick = {this.toggle}\r\n                    color = \"danger\"\r\n                    style = {{marginBottom:\"2rem\"}}\r\n                >AddItem</Button>\r\n                <Modal isOpen= {this.state.modal} toggle= {this.toggle}>\r\n                    <ModalHeader toggle= {this.toggle}> Add to items </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit ={ this.onSubmit } >\r\n                            <FormGroup encType=\"multipart/form-data\">\r\n                                <Label for = 'name'>Name</Label>\r\n                                <Input \r\n                                onChange = {this.onChange}\r\n                                name =\"name\"\r\n                                type =\"text\"\r\n                                id=\"name\"\r\n                                placeholder =\"name\"/>\r\n                                <Label for = 'price'>Name</Label>\r\n                                <Input \r\n                                onChange = {this.onChange}\r\n                                name =\"price\"\r\n                                type =\"text\"\r\n                                id=\"price\"\r\n                                placeholder =\"Price\"/>\r\n                                <Label for = \"info\">Info</Label>\r\n                                <Input \r\n                                onChange = {this.onChange}\r\n                                type=\"textarea\" \r\n                                name=\"info\" \r\n                                id=\"info\" \r\n                                placeholder= 'Info'/>\r\n                                <Input \r\n                                onChange = {this.fileUpload}\r\n                                name =\"file\"\r\n                                type =\"file\"\r\n                                id=\"file\"\r\n                                placeholder =\"Add item to SoppingList\"/>\r\n                                <Button color= 'dark' style ={{marginTop:'2rem' } }block>\r\n                                Add item</Button>\r\n                            </FormGroup>\r\n\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    item:state.item\r\n})\r\n\r\nexport default connect(mapStateToProps ,{addItem})(ItemModal)","import React, { Component,Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getItems } from '../actions/itemsActions';\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTayps from \"prop-types\";\r\n\r\n class Detalis extends Component {\r\n    constructor(props ,Context){\r\n        super(props ,Context)\r\n\r\n        this.state = {\r\n            product:{}\r\n        }\r\n    }\r\n   \r\n    render() {\r\n        const {item} = this.props\r\n        if(!item){\r\n            return <div>loading...</div> \r\n        }\r\n\r\n        console.log(this.props);\r\n        const { _id, name, img, price, info,inCart} = item\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container ry-5\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto text-center text-slanted my-5\">\r\n                            <h1>{item.name }</h1> \r\n                        </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto col-md-6 my-3 \"> \r\n                            <img src={img} className=\"img-fluid\" alt=\"product\" />\r\n                        </div>\r\n                        <div className=\"col-10 mx-auto col-md-6 my-3 text-capitalize\">\r\n                            <h2>model : { name }</h2>\r\n                            <h4>\r\n                                <strong>\r\n                                    price: <span>$</span>\r\n                                    {price}\r\n                                </strong>\r\n                            </h4>\r\n                                <p className=\"text-capitalize font-weight-bold mt-3 mb-0\">\r\n                                    some info about product:\r\n                                </p>\r\n                                <p className=\"text-muted lead\"> { info }</p>\r\n                            <div>\r\n                                <Link to=\"/\">\r\n                                <button className=\"button\" style={{color:\"#dc3545\"}}>\r\n                                back \r\n                                </button>\r\n                                </Link>\r\n                                <button className=\"button\" style={{color:\"#dc3545\"}}\r\n                                disabled ={ inCart ? true:false}\r\n                                >\r\n                                    { inCart ? \" inCart\" : \"Add to cart\" } \r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst  mapStateToProps = (state ,props) => ({\r\n    item: state.item.items.find(item => item._id === props.match.params.id)\r\n})\r\nexport default  connect(mapStateToProps, {getItems} )(Detalis)","import React from 'react'\r\n\r\nexport default function CartColumns() {\r\n    return (\r\n        <div className=\"container-fluid text-center d-none d-lg-block\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10mx auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">product</p>\r\n                </div>\r\n                <div className=\"col-10mx auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">name of product</p>\r\n                </div>\r\n                <div className=\"col-10mx auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">price</p>\r\n                </div>\r\n                <div className=\"col-10mx auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">quantity</p>\r\n                </div>\r\n                <div className=\"col-10mx auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">remove</p>\r\n                </div>\r\n                <div className=\"col-10mx auto col-lg-2\">\r\n                    <p className=\"text-uppercase\">total</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function EmptyCart() {\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto text-center\">\r\n                    <h1>Your cart is empty</h1>\r\n                    <Link to =\"/\">\r\n                        <button>back</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CartItem({cartItem ,value}) {\r\n    // console.log(cartItem ,value)\r\n    const{increment, decrement, removeInCart} = value\r\n    const {_id, name, img, price , count ,total} = cartItemr\n    return (\r\n       <div className=\"row my-1 text-capitalize text-center\">\r\n           <div className=\"col-10 mx-auto col-lg-2\"> \r\n               <img \r\n                src={img}\r\n                alt=\"product\"\r\n                className=\"img-fluid\"\r\n                style={{width:\"5rem\", height:\"5rem\"}}\r\n                />\r\n           </div>\r\n           <div className=\"col-10 mx-auto col-lg-2\">\r\n           <span className=\"d-lg-none\">product :</span>\r\n               { name }\r\n           </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <span className=\"d-lg-none\">price :</span>\r\n                { price }\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2 my-2 my-lg-0\">\r\n               <div className=\"d-flex justify-content-center\">\r\n                    <div>\r\n                        <span className=\"btn btn-black mx-1\" onClick ={() => decrement(_id)}>-</span>\r\n                        <span className=\"btn btn-black mx-1\" >{ count }</span>\r\n                        <span className=\"btn btn-black mx-1\" onClick ={() => increment(_id)} >+</span>\r\n                    </div> \r\n               </div>\r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\">\r\n                <div className=\"cart-icon\" onClick ={() => removeInCart(_id)}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"col-10 mx-auto col-lg-2\"> \r\n                <span>item total : ${ total } </span>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CartItem from './CartItem'\r\nexport default function CartList({value}) {\r\n    \r\n    // console.log(value);\r\n    const {cart} = value\r\n    return ( \r\n        <div>\r\n            {cart.map(item => {\r\n                return <CartItem  key = {item._id} cartItem={ item } value = { value }/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React,{Fragment, Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class CartTotals extends Component {\r\n    render(){\r\n        console.log(this.props);\r\n        \r\n        const { cart,total ,clearCart, removeInCart } = this.props.value;\r\n        let cartTotals = cart.reduce((a, b) => a + b.total ,0)\r\n        \r\n        return  <Fragment>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                             <div className=\"col-10 mt-2 ml-sm-5 ml-md-auto col-sm-8 text-capitalize text-right\">\r\n                                <Link to='/'>\r\n                                    <button className=\"btn btn-outline-danger text-uppercase\"\r\n                                        onClick = {clearCart} \r\n                                    >clear cart</button>\r\n                                </Link>   \r\n                                <h5 className='mt-5'> \r\n                                total\r\n                                    <span> $  {cartTotals}</span>\r\n                                </h5>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n    \r\n                </Fragment>  \r\n    }\r\n  \r\n}\r\n","import React, { Component ,Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Title from '../Title'\r\nimport CartColumns from './CartColumns'\r\nimport EmptyCart from './EmptyCart'\r\nimport CartList from './CartList'\r\nimport CartTotals from './CartTotals'\r\nimport {getItems} from '../../actions/itemsActions'\r\nimport {increment, decrement, removeInCart,clearCart } from '../../actions/cartActions'\r\n\r\nexport  class Cart extends Component {\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const value = this.props\r\n        const { cart } = value\r\n        \r\n        if (cart.length >0) {\r\n            return (\r\n                <Fragment>\r\n                    <Title name=\"Your\" title=\"Cart\" />\r\n                    <CartColumns />\r\n                    <CartList value={ value }/>\r\n                    <CartTotals value = { value }/>\r\n                </Fragment>\r\n            )\r\n        }else {\r\n            return <EmptyCart />\r\n        }\r\n    }\r\n}\r\nconst  mapStateToProps = (state) => ({\r\n    cart: state.cart.cart,\r\n    total: state.cart.total\r\n})\r\nexport default connect(mapStateToProps ,{getItems ,increment, decrement, removeInCart , clearCart} ) (Cart)","import React, { Component } from 'react'\r\n\r\nexport default class Default extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               page not found \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport {GET_ITEMS,ADD_ITEM,DELETE_ITEM,LOADING_ITEMS,ADD_TO_CART } from '../actions/type'\r\nconst initialState = {\r\n    items:[],\r\n    loading:false\r\n}\r\nexport default function (state = initialState ,action) {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            return{ \r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            }; \r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id !== action.payload)\r\n            }  \r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                items: state.items.map(product =>{\r\n                    if (product._id === action.payload._id) {\r\n                        const item = {...product, inCart: action.payload.inCart}\r\n                        return item\r\n                    }\r\n                    return product\r\n                })\r\n            }     \r\n        case ADD_ITEM:\r\n            return{\r\n                ...state,\r\n                items:[action.payload,...state.items]\r\n            }\r\n        case LOADING_ITEMS: \r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }          \r\n        default:\r\n            return state\r\n    }\r\n} ","import {ADD_TO_CART ,GET_ITEMS ,REMOVE_IN_CART,INCREMENT , DECREMENT, DELETE_CART} from \"../actions/type\"\r\nconst initialState = {\r\n    cart:[]\r\n}\r\n\r\nexport default function (state = initialState ,action) {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            const item = action.payload; \r\n            item.total = item.count * item.price;\r\n            return { \r\n                ...state,\r\n                cart:[item ,...state.cart]\r\n            }\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                cart:[...action.payload].filter(item => {\r\n                    item.total = item.count * item.price;\r\n                    return item.inCart !== false\r\n                })\r\n            } \r\n        case REMOVE_IN_CART:\r\n            return { \r\n                ...state,\r\n                cart:state.cart.filter(item => item._id !== action.payload)\r\n            } \r\n        case DELETE_CART:\r\n            return { \r\n                 ...state,\r\n                 cart:[...action.payload]\r\n            }\r\n        case INCREMENT:    \r\n            return {\r\n                ...state,\r\n                cart:state.cart.map(product =>{\r\n                    if (product._id === action.payload) {\r\n                        product.count++;\r\n                        product.total = product.count * product.price;\r\n                        const item = {...product };\r\n                        return item\r\n                    }\r\n                    return product\r\n                })\r\n            } \r\n            case DECREMENT:    \r\n            return {\r\n                ...state,\r\n                cart:state.cart.map(product =>{\r\n                    if (product._id === action.payload) {\r\n                        if (product.count>0) {\r\n                            product.count--;\r\n                            product.total = product.count * product.price;\r\n                        }\r\n                        const item = {...product } \r\n                        return item\r\n                    }\r\n                    return product\r\n                })\r\n            }           \r\n        default:\r\n            return state\r\n    }\r\n}","import { GET_ERRORS , CLEAR_ERRORS } from \"../actions/type\";\r\nconst initialState = {\r\n    msg:{},\r\n    id:null,\r\n    status:null\r\n}\r\nexport default function (state =initialState , action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg:action.payload.msg,\r\n                id: action.payload.id,\r\n                status: action.payload.status\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return{\r\n                msg:{},\r\n                id:null,\r\n                status:null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from \"../actions/type\"\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null\r\n}\r\nexport default function (state = initialState ,action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return{\r\n                ...state, \r\n                isLoading: true,\r\n            }\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            } \r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token )\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token')\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                user:null,\r\n                isLoading:false\r\n            }                           \r\n        default:\r\n           return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer';\r\nimport cartReducer from './cartReducer';\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({ \r\n    item: itemReducer,\r\n    cart:cartReducer,\r\n    error: errorReducer,\r\n    auth: authReducer, \r\n})","import { createStore, applyMiddleware ,compose} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n)\r\nexport default store\r\n    ","import React,{Component ,Fragment} from 'react';\nimport { Route ,Switch} from 'react-router-dom'\n\nimport AppNavbar from './components/AppNavbar';\nimport ShoppingList from \"./components/ShoppingList\";\nimport ItemModal from \"./components/itemModal\"\nimport Detalis from './components/Details';\nimport Card from './components/Cart/Cart';\nimport Default from './components/Default';\nimport {loadUser} from \"./actions/authActions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport store from \"./store\";\nimport { getItems } from './actions/itemsActions';\n\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n    store.dispatch(getItems());\n  }\n  render(){\n     return (\n        <Fragment >\n          <AppNavbar />\n          <Switch>\n            <Route path = '/'  component = { ShoppingList } exact/>\n            <Route path= '/admin' component = { ItemModal }/> \n            <Route path= '/detalis/:id' component = { Detalis }/>\n            <Route path= '/card' component = { Card }/>\n            <Route component = { Default }/>\n          </Switch>\n        </Fragment>\n    )\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <Provider store = {store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}